<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一些碎碎念</title>
  
  <subtitle>路漫漫其修远兮，边走边看吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.56way.com/"/>
  <updated>2023-09-10T13:26:43.908Z</updated>
  <id>https://www.56way.com/</id>
  
  <author>
    <name>番茄炒蛋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>页面首屏渲染优化</title>
    <link href="https://www.56way.com/2023/09/10/first-screen-speed/"/>
    <id>https://www.56way.com/2023/09/10/first-screen-speed/</id>
    <published>2023-09-10T09:45:08.000Z</published>
    <updated>2023-09-10T13:26:43.908Z</updated>
    
    <content type="html"><![CDATA[<h3 id="性能优化的核心思想"><a href="#性能优化的核心思想" class="headerlink" title="性能优化的核心思想"></a>性能优化的核心思想</h3><ul><li>减少加载时间</li><li>减少渲染时间</li></ul><h3 id="减少加载时间"><a href="#减少加载时间" class="headerlink" title="减少加载时间"></a>减少加载时间</h3><blockquote><p>最短的时间就是不加载</p></blockquote><h4 id="减少请求数量"><a href="#减少请求数量" class="headerlink" title="减少请求数量"></a>减少请求数量</h4><ul><li>合并请求</li><li>http2</li><li>lazy-load 暂时不用的延时请求</li><li>减少非首屏的资源，webpack 拆包，组件异步加载</li><li>css</li></ul><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><ul><li>静态资源缓存，CDN</li><li>本地缓存时效：304 等</li></ul><h4 id="提前请求使用的时候立马呈现"><a href="#提前请求使用的时候立马呈现" class="headerlink" title="提前请求使用的时候立马呈现"></a>提前请求使用的时候立马呈现</h4><ul><li><p>rel&#x3D;’preload’ rel&#x3D;’prefetch’</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefetch<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/prefetch.js<span class="token punctuation">"</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>script<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preload<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./nextpage.js<span class="token punctuation">"</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>script<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>提前下发资源 </p><blockquote><p>–cdn预热 App自建下发通道等</p></blockquote></li><li><p>业务接口数据预请求</p></li></ul><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Prefetch">什么是链接预取</a><br><a href="https://github.com/xitu/gold-miner/blob/master/TODO/preload-prefetch-and-priorities-in-chrome.md">Preload，Prefetch 和它们在 Chrome 之中的优先级</a></p><h3 id="减少渲染时间"><a href="#减少渲染时间" class="headerlink" title="减少渲染时间"></a>减少渲染时间</h3><blockquote><p>最快的渲染时间就是不需要渲染，使用的时候就已经ready</p></blockquote><ul><li>SSR 服务端渲染</li><li>预渲染 rel&#x3D;prerender –使用不多, App容器内可以自己控制</li><li>首屏加载资源优化</li></ul><h3 id="减少重绘-重排"><a href="#减少重绘-重排" class="headerlink" title="减少重绘&amp;重排"></a>减少重绘&amp;重排</h3><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><a href="https://alienzhou.github.io/fe-performance-journey/">前端性能优化</a></li></ul><p>本文作者：番茄炒蛋<br />本文地址： <a href="https://www.56way.com/2023/09/10/first-screen-speed/">https://www.56way.com/2023/09/10/first-screen-speed/</a> <br />版权声明：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      前端首屏优化是个老生常谈的问题，面试常见的一个题目，总结归纳一下相关的知识点以及方法
    
    </summary>
    
    
      <category term="web" scheme="https://www.56way.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>可转债基础知识</title>
    <link href="https://www.56way.com/2023/09/10/ke_zhuan_zhai/"/>
    <id>https://www.56way.com/2023/09/10/ke_zhuan_zhai/</id>
    <published>2023-09-10T08:35:04.000Z</published>
    <updated>2023-09-10T08:36:01.357Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>可转换债券（Convertible Bond，CB），简称可转债，又作可换股债券，是一种混合债券及金融衍生品，可按一定规则转换为债券发行公司的股票；其转换价格、转换时间段会在发行前确定。由于附加了认股权证（期权）等多种权益，可转换债券通常票面利率较一般企业债券低。从发行者的角度看，用可转换债券融资的主要优势在于可以减少利息费用，增加股权融资，降低负债率，但如果债券被转换，公司原股东的股权将被稀释。</p></blockquote><blockquote><p>2020年，中国的可转债市场火爆主要是因为可转债规模小、T+0交易，容易被市场投机资金盯上，短期出现炒作现象。10月23日，证监会发布《可转换公司债券管理办法(征求意见稿)》表示，可转债是企业再融资的重要渠道之一，针对近期出现的个别可转债被过分炒作、大涨大跌现象，着重解决投资者适当性管理不适应、交易制度缺乏制衡等问题。同时还强调防范交易风险，加强投资者保护</p></blockquote><h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><p>可转债的价值由两部分构成，债的价值和转股后的股票价值，本质上这个东西就是一个记账式凭证，一般这个凭证的初始票面价值为100元，在发行的时候会约定比如：3年后以10元一股转换为对应发行公司的股票。100元就可以兑换10股，或者三年后以100元价格+利息回购这个凭证。 年利率3%。，则三年后这个凭证的价值就是100+9 &#x3D; 109元。</p><h3 id="收益与风险"><a href="#收益与风险" class="headerlink" title="收益与风险"></a>收益与风险</h3><p>基于以上认知那么理论会有以下几种情况发生</p><h4 id="股票价值变化"><a href="#股票价值变化" class="headerlink" title="股票价值变化"></a>股票价值变化</h4><ul><li><p>三年后股票价值为20元，则用户选择转为股票次可转债价值为200元</p></li><li><p>三年后股票价值为5元，若用户选择转股则亏损50元，这时选择债券则收益为109元。</p></li><li><p>公司倒闭退市，可转债违约– 这两年有发生，比较复杂。so ST的股票可转债谨慎交易</p></li></ul><p>一张面值100的可转债在市场上流通的价值是多种因素构成的，有可能低于100 也有可能偏离很多。但是申购的时候都是按照面值100 来申购的。</p><h4 id="实际可能发生的情况"><a href="#实际可能发生的情况" class="headerlink" title="实际可能发生的情况"></a>实际可能发生的情况</h4><ul><li><p>可转债股价下修，比如实际股票跌到5块钱，则公司可以提案下修可转债的兑换价值为5元</p><blockquote><p>当正股收盘价多个交易日低于当期转股价值的某个百分比时，例如，当公司股票在任意连续三十个交易日中有十五个交易日的收盘价低于当期转股价格的80%时，公司有权提出转股价下调方案，并在股东大会通过后实行。当公司发生送股，配股，派发现金红利等操作时，公司也会相应调整转股价格</p></blockquote></li><li><p>强制赎回  当可转债价格触发提前赎回条款时，公司有权利按债券面值加上应计利息的价格强制赎回可转债</p><blockquote><p>触发条件一般为正股收盘价多个交易日高于当期转股价值的某个百分比，例如公司股票在任意连续30个交易日中至少15个交易日的收盘价格不低于当期转股价格的130%（含130%）时，这种情况叫“强制赎回”。当因可转债未转股余额过少，触发相关赎回机制时也会产生赎回，称为“余额赎回”。最后一种情况是可转债到期后公司按约定赎回债券，叫“到期赎回”。</p></blockquote></li><li><p>强制回售</p><blockquote><p>在可转债回售期限（一般在可转债续存的最后两个计息年度）内，正股收盘价连续多个交易日低于当期转股价格的某个百分比时，例如公司股票在任何连续三十个交易日的收盘价低于当期转股价格的70%时，公司有义务以事先约定的本息价格购买投资者手中全部或部分可转债，这种情况简称“强制回售”。回售触发条款会比转股价下调触发条款更难触发。</p></blockquote></li><li><p>实际转股后股票价格大跌</p><blockquote><p>还是上面的例子，你以10元每股的价格转换了10股，股票价格为12元，但是第二天股票跌停变为12-1.2 &#x3D; 10.8 ，则实际收益为108元。(跌停的例子实际发生过)</p></blockquote></li></ul><h3 id="交易规则"><a href="#交易规则" class="headerlink" title="交易规则"></a>交易规则</h3><ul><li>T+0 交易</li><li>上市首日涨跌幅限制为 【-43.3%,57.3%】</li><li>正常交易日涨跌幅为20%</li><li>Z开头的标记为此可转债今天是最后交易日</li></ul><h3 id="交易建议"><a href="#交易建议" class="headerlink" title="交易建议"></a>交易建议</h3><p> 基于以上知识点，交易可转债时候有以下建议</p><ul><li>ST的股票对应的可转债需求注意风险</li><li>一般低于100的可转债存在无风险套利空间</li><li>如若强制赎回的日期需要关注相关公告，测算好自己的收益</li></ul><blockquote><p>价格不同，选择价格低的，价格相同选择溢价率低的，两者相似，选择到期时间近的或者下修过转股价的。</p></blockquote><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://www.investor.org.cn/learning_center/gallery/xueqiu_2885/202112/P020211223338406859774.pdf">认知可转债</a></li><li><a href="https://data.eastmoney.com/xg/xg/?mkt=kzz">可转债数据</a></li><li><a href="https://quote.eastmoney.com/center/fullscreenlist.html?st=zgYjb&sr=1#convertible_comparison">可转债比价</a></li><li><a href="https://guba.eastmoney.com/list,zq.html">可转债股吧</a></li><li><img src="https://www.investor.org.cn/learning_center/investors_classroom/hot_topic/online/essay_competition_3067/202208/W020220822517629004873.png"></li></ul><p>本文作者：番茄炒蛋<br />本文地址： <a href="https://www.56way.com/2023/09/10/ke_zhuan_zhai/">https://www.56way.com/2023/09/10/ke_zhuan_zhai&#x2F;</a> <br />版权声明：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      今天在家翻了两本可转债的投资书籍，记录一些心得体会，可转换债券（Convertible Bond，CB），简称可转债，又作可换股债券，是一种混合债券及金融衍生品，可按一定规则转换为债券发行公司的股票，(⊙o⊙)…
    
    </summary>
    
    
      <category term="理财" scheme="https://www.56way.com/tags/%E7%90%86%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>typescript修改npm包的类型定义</title>
    <link href="https://www.56way.com/2023/09/08/NPM_interface/"/>
    <id>https://www.56way.com/2023/09/08/NPM_interface/</id>
    <published>2023-09-08T12:11:14.000Z</published>
    <updated>2023-09-10T08:36:42.132Z</updated>
    
    <content type="html"><![CDATA[<p>我们在使用TS进行开发的时候有时候会遇到第三方库的类型限制导致TS校验不同的情况，这样就需要我们自己重新去定义这个第三库的类型声明文件，今天遇到这个坑，记录一下解决办法。</p><p>正常的一个TS文件如下，就是页面展示一个日期选择器，用的组件是三方库 chakra-dayzed-datepicker</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> RangeDatepicker <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker'</span><span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">[</span>timeDate<span class="token punctuation">,</span> setTimeDate<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2023/08/10'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2023/09/10'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 填充默认时间</span>  <span class="token keyword">return</span>  <span class="token operator">&lt;</span>RangeDatepicker selectedDates<span class="token operator">=</span><span class="token punctuation">&#123;</span>timeDate<span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h3><blockquote><p>  进入页面的初始化时候，默认日期为空</p></blockquote><p> 一分钟搞定<br> <pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> RangeDatepicker <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker'</span>   <span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">const</span> <span class="token punctuation">[</span>timeDate<span class="token punctuation">,</span> setTimeDate<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token keyword">undefined</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 填充默认时间为空</span>       <span class="token keyword">return</span>  <span class="token operator">&lt;</span>RangeDatepicker selectedDates<span class="token operator">=</span><span class="token punctuation">&#123;</span>timeDate<span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">></span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br> 但是，RangeDatepicker 这个组件就报错了<br> <img src="/images/ts-error.png"><br><font color='red'><br>    不能将类型“Date[] | undefined[]”分配给类型“Date[]”。<br>    不能将类型“undefined[]”分配给类型“Date[]”。<br>    不能将类型“undefined”分配给类型“Date”<br></font></p><p>现在问题变成怎么修改 *** chakra-dayzed-datepicker*** 的声明类型</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Props <span class="token keyword">as</span> DayzedHookProps <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'dayzed'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> CalendarConfigs<span class="token punctuation">,</span> DatepickerConfigs<span class="token punctuation">,</span> DatepickerProps<span class="token punctuation">,</span> PropsConfigs <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./utils/commonTypes'</span><span class="token punctuation">;</span><span class="token keyword">interface</span> <span class="token class-name">RangeCalendarPanelProps</span> <span class="token punctuation">&#123;</span>    dayzedHookProps<span class="token operator">:</span> DayzedHookProps<span class="token punctuation">;</span>    configs<span class="token operator">:</span> CalendarConfigs<span class="token punctuation">;</span>    propsConfigs<span class="token operator">?</span><span class="token operator">:</span> PropsConfigs<span class="token punctuation">;</span>    selected<span class="token operator">?</span><span class="token operator">:</span> Date <span class="token operator">|</span> Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> RangeCalendarPanel<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>RangeCalendarPanelProps<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RangeDatepickerProps</span> <span class="token keyword">extends</span> <span class="token class-name">DatepickerProps</span> <span class="token punctuation">&#123;</span>    selectedDates<span class="token operator">:</span> Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     configs<span class="token operator">?</span><span class="token operator">:</span> DatepickerConfigs<span class="token punctuation">;</span>    disabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>    defaultIsOpen<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>    closeOnSelect<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>    <span class="token function-variable function">onDateChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>date<span class="token operator">:</span> Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>    id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>    usePortal<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> RangeDatepicker<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>RangeDatepickerProps<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接修改NPM包肯定是不行的，这NPM部署安装一下就是新的所以我们需要<br>重新定义一下RangeDatepickerProps</p><h3 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h3><blockquote><p>1.在项目tsconfig.json同级目录新建一个types目录<br>2.创建文件RangeDatepicker.d.ts<br>3.修改tsconfig.json配置的compilerOptions属性指定chakra-dayzed-datepicker的申明文件</p></blockquote><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token string-property property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>   <span class="token string-property property">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>     <span class="token string-property property">"chakra-dayzed-datepicker"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"./types/rangeDatepicker"</span><span class="token punctuation">]</span>   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>rangeDatepicker.d.ts文件内容如下</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">//rangeDatepicker.d.ts</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> RangeDatepickerProps <span class="token keyword">as</span> LibRangeDatepickerProps <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker/src/'</span><span class="token comment">// 导出RangeDatepickerProps</span><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker'</span><span class="token comment">// 默认接口导出</span><span class="token keyword">type</span> <span class="token class-name">RangeDatepickerPropsLess</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>LibRangeDatepickerProps<span class="token punctuation">,</span> <span class="token string">'selectedDates'</span><span class="token operator">></span><span class="token comment">// Omit 干掉selectedDates</span><span class="token keyword">interface</span> <span class="token class-name">RangeDatepickerProps</span> <span class="token keyword">extends</span> <span class="token class-name">RangeDatepickerPropsLess</span> <span class="token punctuation">&#123;</span>  selectedDates<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Date <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">></span> <span class="token comment">// 复写 selectedDates</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> RangeDatepicker<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>RangeDatepickerProps<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本文作者：番茄炒蛋<br />本文地址： <a href="https://www.56way.com/2023/09/08/NPM_interface/">https://www.56way.com/2023/09/08/NPM_interface&#x2F;</a> <br />版权声明：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      我们在使用TS进行开发的时候有时候会遇到第三方库的类型限制导致TS校验不同的情况，这样就需要我们自己重新去定义这个第三库的类型声明文件，今天遇到这个坑，记录一下解决办法。
    
    </summary>
    
    
      <category term="typescript" scheme="https://www.56way.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>react setState同步更新与异步更新</title>
    <link href="https://www.56way.com/2023/09/07/react_setState/"/>
    <id>https://www.56way.com/2023/09/07/react_setState/</id>
    <published>2023-09-07T14:01:04.000Z</published>
    <updated>2023-09-10T09:45:24.492Z</updated>
    
    <content type="html"><![CDATA[<p>学习react相关的文档知识，有些过时的信息需要及时校正，比如这个setState的同步&amp;异步更新问题以前也是常见的面试题,在react18之后他的答案又变化了，能力的提升就是踩坑的频次。(⊙o⊙)…</p><h2 id="言归正传"><a href="#言归正传" class="headerlink" title="言归正传"></a>言归正传</h2><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>我们有如下代码，是一个常见的面试题</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'abc'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'didmount'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// setTimeout中调用</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'setTimeout: pre----'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'setTimeout'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'setTimeout:==== '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'div2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>increment2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 合成事件中调用</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'react increment==== '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'increment'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'react event: '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token function-variable function">increment2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 原生事件中调用</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'dom event: ===='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'dom event'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'dom event: '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"App"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>couont<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"div1"</span> onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>increment<span class="token punctuation">&#125;</span><span class="token operator">></span>          <span class="token punctuation">&#123;</span>React<span class="token punctuation">.</span>version<span class="token punctuation">&#125;</span>increment1        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"div2"</span><span class="token operator">></span>click me and increment2<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在React 18 之前，</p><blockquote><p>只在React 事件处理函数中进行批异步更新。<br>默认情况下，在promise、setTimeout、原生事件处理函数中、或任何其它事件内的更新都是同步的</p></blockquote><p>在React 18 之后</p> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDom <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createRoot <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-dom/client'</span><span class="token punctuation">;</span><span class="token keyword">const</span> rootElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 异步测试 --react18 推荐语法</span><span class="token comment">//createRoot(rootElement).render(&lt;App />);</span><span class="token comment">// 同步测试 --react18 废弃语法</span>ReactDom<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> rootElement<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当你用 ReactDom.render 挂载节点的时候会运行得到的效果就是</p><blockquote><p>只在React 事件处理函数中进行批异步更新，其他的 promise、setTimeout、原生事件处理函数中的更新都是同步的<br>当你用 createRoot(rootElement).render(<App />); 挂载节点的时候，<br>所有的更新都是异步的。</p></blockquote><p>本文作者：番茄炒蛋<br />本文地址： <a href="https://www.56way.com/2023/09/07/react_setState/">https://www.56way.com/2023/09/07/react_setState&#x2F;</a> <br />版权声明：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      学习react相关的文档知识，有些过时的信息需要及时校正，比如这个setState的同步&amp;异步更新问题以前也是常见的面试题,在react18之后他的答案又变化了，能力的提升就是踩坑的频次。(⊙o⊙)…
    
    </summary>
    
    
      <category term="web" scheme="https://www.56way.com/tags/web/"/>
    
  </entry>
  
</feed>
