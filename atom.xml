<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一些碎碎念</title>
  
  <subtitle>路漫漫其修远兮，边走边看吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.56way.com/"/>
  <updated>2023-09-08T04:06:44.493Z</updated>
  <id>https://www.56way.com/</id>
  
  <author>
    <name>番茄炒蛋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>typescript修改npm包的类型定义</title>
    <link href="https://www.56way.com/2023/09/07/NPM_interface/"/>
    <id>https://www.56way.com/2023/09/07/NPM_interface/</id>
    <published>2023-09-07T14:01:04.000Z</published>
    <updated>2023-09-08T04:06:44.493Z</updated>
    
    <content type="html"><![CDATA[<p>我们在使用TS进行开发的时候有时候会遇到第三方库的类型限制导致TS校验不同的情况，这样就需要我们自己重新去定义这个第三库的类型声明文件，今天遇到这个坑，记录一下解决办法。</p><p>正常的一个TS文件如下，就是页面展示一个日期选择器，用的组件是三方库 chakra-dayzed-datepicker</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RangeDatepicker</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;chakra-dayzed-datepicker&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Demo</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> [timeDate, setTimeDate] = useState&lt;<span class="title class_">Date</span>[]&gt;([<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023/08/10&#x27;</span>),<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023/09/10&#x27;</span>)])<span class="comment">// 填充默认时间</span></span><br><span class="line"><span class="keyword">return</span>  <span class="language-xml"><span class="tag">&lt;<span class="name">RangeDatepicker</span> <span class="attr">selectedDates</span>=<span class="string">&#123;timeDate&#125;/</span>&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h3><blockquote><p>  进入页面的初始化时候，默认日期为空</p></blockquote><p> 一分钟搞定<br> <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mport &#123; <span class="title class_">RangeDatepicker</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;chakra-dayzed-datepicker&#x27;</span></span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">Demo</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="keyword">const</span> [timeDate, setTimeDate] = useState&lt;<span class="title class_">Date</span>[]|<span class="literal">undefined</span>[]&gt;([,])<span class="comment">// 填充默认时间为空</span></span><br><span class="line">       <span class="keyword">return</span>  <span class="language-xml"><span class="tag">&lt;<span class="name">RangeDatepicker</span> <span class="attr">selectedDates</span>=<span class="string">&#123;timeDate&#125;/</span>&gt;</span></span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><br> 但是，RangeDatepicker 这个组件就报错了<br> <img src="/public/img/ts-error.png"><br><font color='red'><br>    不能将类型“Date[] | undefined[]”分配给类型“Date[]”。<br>    不能将类型“undefined[]”分配给类型“Date[]”。<br>    不能将类型“undefined”分配给类型“Date”<br></font></p><p>现在问题变成怎么修改 *** chakra-dayzed-datepicker*** 的声明类型</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Props</span> <span class="keyword">as</span> <span class="title class_">DayzedHookProps</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;dayzed&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CalendarConfigs</span>, <span class="title class_">DatepickerConfigs</span>, <span class="title class_">DatepickerProps</span>, <span class="title class_">PropsConfigs</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/commonTypes&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">RangeCalendarPanelProps</span> &#123;</span><br><span class="line">    <span class="attr">dayzedHookProps</span>: <span class="title class_">DayzedHookProps</span>;</span><br><span class="line">    <span class="attr">configs</span>: <span class="title class_">CalendarConfigs</span>;</span><br><span class="line">    propsConfigs?: <span class="title class_">PropsConfigs</span>;</span><br><span class="line">    selected?: <span class="title class_">Date</span> | <span class="title class_">Date</span>[];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">declare</span> <span class="keyword">const</span> <span class="title class_">RangeCalendarPanel</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">RangeCalendarPanelProps</span>&gt;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">RangeDatepickerProps</span> <span class="keyword">extends</span> <span class="title class_">DatepickerProps</span> &#123;</span><br><span class="line">    <span class="attr">selectedDates</span>: <span class="title class_">Date</span>[]; </span><br><span class="line">    configs?: <span class="title class_">DatepickerConfigs</span>;</span><br><span class="line">    disabled?: <span class="built_in">boolean</span>;</span><br><span class="line">    defaultIsOpen?: <span class="built_in">boolean</span>;</span><br><span class="line">    closeOnSelect?: <span class="built_in">boolean</span>;</span><br><span class="line">    <span class="attr">onDateChange</span>: <span class="function">(<span class="params">date: <span class="built_in">Date</span>[]</span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">    id?: <span class="built_in">string</span>;</span><br><span class="line">    name?: <span class="built_in">string</span>;</span><br><span class="line">    usePortal?: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">declare</span> <span class="keyword">const</span> <span class="title class_">RangeDatepicker</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">RangeDatepickerProps</span>&gt;;</span><br><span class="line"><span class="keyword">export</span> &#123;&#125;;</span><br></pre></td></tr></table></figure><p>直接修改NPM包肯定是不行的，这NPM部署安装一下就是新的所以我们需要<br>重新定义一下RangeDatepickerProps</p><h3 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h3><blockquote><p>1.在项目tsconfig.json同级目录新建一个types目录<br>2.创建文件RangeDatepicker.d.ts<br>3.修改tsconfig.json配置的compilerOptions属性指定chakra-dayzed-datepicker的申明文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;paths&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;chakra-dayzed-datepicker&quot;</span>: [<span class="string">&quot;./types/rangeDatepicker&quot;</span>]</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>rangeDatepicker.d.ts文件内容如下</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//rangeDatepicker.d.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RangeDatepickerProps</span> <span class="keyword">as</span> <span class="title class_">LibRangeDatepickerProps</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;chakra-dayzed-datepicker/src/&#x27;</span></span><br><span class="line"><span class="comment">// 导出RangeDatepickerProps</span></span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">&#x27;chakra-dayzed-datepicker&#x27;</span><span class="comment">// 默认接口导出</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">RangeDatepickerPropsLess</span> = <span class="title class_">Omit</span>&lt;<span class="title class_">LibRangeDatepickerProps</span>, <span class="string">&#x27;selectedDates&#x27;</span>&gt;<span class="comment">// Omit 干掉selectedDates</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">RangeDatepickerProps</span> <span class="keyword">extends</span> <span class="title class_">RangeDatepickerPropsLess</span> &#123;</span><br><span class="line">  <span class="attr">selectedDates</span>: <span class="title class_">Array</span>&lt;<span class="title class_">Date</span> | <span class="literal">undefined</span>&gt; <span class="comment">// 复写 selectedDates</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">declare</span> <span class="keyword">const</span> <span class="title class_">RangeDatepicker</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">RangeDatepickerProps</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      我们在使用TS进行开发的时候有时候会遇到第三方库的类型限制导致TS校验不同的情况，这样就需要我们自己重新去定义这个第三库的类型声明文件，今天遇到这个坑，记录一下解决办法。
    
    </summary>
    
    
      <category term="NPM,Interface,TypeScript" scheme="https://www.56way.com/tags/NPM-Interface-TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>react setState同步更新与异步更新</title>
    <link href="https://www.56way.com/2023/09/07/react_setState/"/>
    <id>https://www.56way.com/2023/09/07/react_setState/</id>
    <published>2023-09-07T14:01:04.000Z</published>
    <updated>2023-09-08T04:03:45.480Z</updated>
    
    <content type="html"><![CDATA[<p>学习react相关的文档知识，有些过时的信息需要及时校正，比如这个setState的同步&amp;异步更新问题以前也是常见的面试题,在react18之后他的答案又变化了，能力的提升就是踩坑的频次。(⊙o⊙)…</p><h2 id="言归正传"><a href="#言归正传" class="headerlink" title="言归正传"></a>言归正传</h2><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>我们有如下代码，是一个常见的面试题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">App</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;didmount&#x27;</span> &#125;);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// setTimeout中调用</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;setTimeout: pre----&#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;setTimeout&#x27;</span> &#125;);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;setTimeout:==== &#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;div2&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="variable language_">this</span>.<span class="property">increment2</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  increment = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 合成事件中调用</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;react increment==== &#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;increment&#x27;</span> &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;react event: &#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  increment2 = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 原生事件中调用</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dom event: ====&#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;dom event&#x27;</span> &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dom event: &#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>couont: &#123;this.state.name&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;this.increment&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;React.version&#125;increment1</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>click me and increment2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在React 18 之前，</p><blockquote><p>只在React 事件处理函数中进行批异步更新。<br>默认情况下，在promise、setTimeout、原生事件处理函数中、或任何其它事件内的更新都是同步的</p></blockquote><p>在React 18 之后</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">ReactDom</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createRoot &#125; <span class="keyword">from</span> <span class="string">&#x27;react-dom/client&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rootElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"><span class="comment">// 异步测试 --react18 推荐语法</span></span><br><span class="line"><span class="comment">//createRoot(rootElement).render(&lt;App /&gt;);</span></span><br><span class="line"><span class="comment">// 同步测试 --react18 废弃语法</span></span><br><span class="line"><span class="title class_">ReactDom</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>, rootElement);</span><br></pre></td></tr></table></figure><p>当你用 ReactDom.render 挂载节点的时候会运行得到的效果就是</p><blockquote><p>只在React 事件处理函数中进行批异步更新，其他的 promise、setTimeout、原生事件处理函数中的更新都是同步的<br>当你用 createRoot(rootElement).render(<App />); 挂载节点的时候，<br>所有的更新都是异步的。 </p></blockquote>]]></content>
    
    <summary type="html">
    
      学习react相关的文档知识，有些过时的信息需要及时校正，比如这个setState的同步&amp;异步更新问题以前也是常见的面试题,在react18之后他的答案又变化了，能力的提升就是踩坑的频次。(⊙o⊙)…
    
    </summary>
    
    
      <category term="react, setState, 异步更新" scheme="https://www.56way.com/tags/react-setState-%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
</feed>
