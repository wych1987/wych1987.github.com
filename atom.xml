<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一些碎碎念</title>
  
  <subtitle>路漫漫其修远兮，边走边看吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.56way.com/"/>
  <updated>2023-09-08T04:17:40.214Z</updated>
  <id>https://www.56way.com/</id>
  
  <author>
    <name>番茄炒蛋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>typescript修改npm包的类型定义</title>
    <link href="https://www.56way.com/2023/09/07/NPM_interface/"/>
    <id>https://www.56way.com/2023/09/07/NPM_interface/</id>
    <published>2023-09-07T14:01:04.000Z</published>
    <updated>2023-09-08T04:17:40.214Z</updated>
    
    <content type="html"><![CDATA[<p>我们在使用TS进行开发的时候有时候会遇到第三方库的类型限制导致TS校验不同的情况，这样就需要我们自己重新去定义这个第三库的类型声明文件，今天遇到这个坑，记录一下解决办法。</p><p>正常的一个TS文件如下，就是页面展示一个日期选择器，用的组件是三方库 chakra-dayzed-datepicker</p><pre class=" language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> RangeDatepicker <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker'</span><span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">[</span>timeDate<span class="token punctuation">,</span> setTimeDate<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2023/08/10'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2023/09/10'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 填充默认时间</span><span class="token keyword">return</span>  <span class="token operator">&lt;</span>RangeDatepicker selectedDates<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>timeDate<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h3><blockquote><p>  进入页面的初始化时候，默认日期为空</p></blockquote><p> 一分钟搞定</p><pre class=" language-ts"><code class="language-ts">mport <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> RangeDatepicker <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker'</span>   <span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token keyword">const</span> <span class="token punctuation">[</span>timeDate<span class="token punctuation">,</span> setTimeDate<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span>undefined<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 填充默认时间为空</span>       <span class="token keyword">return</span>  <span class="token operator">&lt;</span>RangeDatepicker selectedDates<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>timeDate<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">></span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p> 但是，RangeDatepicker 这个组件就报错了<br> <img src="/images/ts-error.png"><br><font color='red'><br>    不能将类型“Date[] | undefined[]”分配给类型“Date[]”。<br>    不能将类型“undefined[]”分配给类型“Date[]”。<br>    不能将类型“undefined”分配给类型“Date”<br></font></p><p>现在问题变成怎么修改 *** chakra-dayzed-datepicker*** 的声明类型</p><pre class=" language-ts"><code class="language-ts"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Props as DayzedHookProps <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'dayzed'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> CalendarConfigs<span class="token punctuation">,</span> DatepickerConfigs<span class="token punctuation">,</span> DatepickerProps<span class="token punctuation">,</span> PropsConfigs <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'./utils/commonTypes'</span><span class="token punctuation">;</span><span class="token keyword">interface</span> <span class="token class-name">RangeCalendarPanelProps</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    dayzedHookProps<span class="token punctuation">:</span> DayzedHookProps<span class="token punctuation">;</span>    configs<span class="token punctuation">:</span> CalendarConfigs<span class="token punctuation">;</span>    propsConfigs<span class="token operator">?</span><span class="token punctuation">:</span> PropsConfigs<span class="token punctuation">;</span>    selected<span class="token operator">?</span><span class="token punctuation">:</span> Date <span class="token operator">|</span> Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> RangeCalendarPanel<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>RangeCalendarPanelProps<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RangeDatepickerProps</span> <span class="token keyword">extends</span> <span class="token class-name">DatepickerProps</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    selectedDates<span class="token punctuation">:</span> Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     configs<span class="token operator">?</span><span class="token punctuation">:</span> DatepickerConfigs<span class="token punctuation">;</span>    disabled<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>    defaultIsOpen<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>    closeOnSelect<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>    onDateChange<span class="token punctuation">:</span> <span class="token punctuation">(</span>date<span class="token punctuation">:</span> Date<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">void</span><span class="token punctuation">;</span>    id<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>    name<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>    usePortal<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> RangeDatepicker<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>RangeDatepickerProps<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span></code></pre><p>直接修改NPM包肯定是不行的，这NPM部署安装一下就是新的所以我们需要<br>重新定义一下RangeDatepickerProps</p><h3 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h3><blockquote><p>1.在项目tsconfig.json同级目录新建一个types目录<br>2.创建文件RangeDatepicker.d.ts<br>3.修改tsconfig.json配置的compilerOptions属性指定chakra-dayzed-datepicker的申明文件</p></blockquote><pre class=" language-js"><code class="language-js"> <span class="token string">"compilerOptions"</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">"paths"</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token string">"chakra-dayzed-datepicker"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"./types/rangeDatepicker"</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><p>rangeDatepicker.d.ts文件内容如下</p><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">//rangeDatepicker.d.ts</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> RangeDatepickerProps as LibRangeDatepickerProps <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker/src/'</span><span class="token comment" spellcheck="true">// 导出RangeDatepickerProps</span><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">'chakra-dayzed-datepicker'</span><span class="token comment" spellcheck="true">// 默认接口导出</span>type RangeDatepickerPropsLess <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>LibRangeDatepickerProps<span class="token punctuation">,</span> <span class="token string">'selectedDates'</span><span class="token operator">></span><span class="token comment" spellcheck="true">// Omit 干掉selectedDates</span><span class="token keyword">interface</span> <span class="token class-name">RangeDatepickerProps</span> <span class="token keyword">extends</span> <span class="token class-name">RangeDatepickerPropsLess</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  selectedDates<span class="token punctuation">:</span> <span class="token keyword">Array</span><span class="token operator">&lt;</span>Date <span class="token operator">|</span> undefined<span class="token operator">></span> <span class="token comment" spellcheck="true">// 复写 selectedDates</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> RangeDatepicker<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>RangeDatepickerProps<span class="token operator">></span></code></pre><p>__本文作者__：番茄炒蛋<br />__本文地址__： <a href="https://www.56way.com/2023/09/07/NPM_interface/">https://www.56way.com/2023/09/07/NPM_interface&#x2F;</a> <br />__版权声明__：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      我们在使用TS进行开发的时候有时候会遇到第三方库的类型限制导致TS校验不同的情况，这样就需要我们自己重新去定义这个第三库的类型声明文件，今天遇到这个坑，记录一下解决办法。
    
    </summary>
    
    
      <category term="NPM,Interface,TypeScript" scheme="https://www.56way.com/tags/NPM-Interface-TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>react setState同步更新与异步更新</title>
    <link href="https://www.56way.com/2023/09/07/react_setState/"/>
    <id>https://www.56way.com/2023/09/07/react_setState/</id>
    <published>2023-09-07T14:01:04.000Z</published>
    <updated>2023-09-08T04:03:45.480Z</updated>
    
    <content type="html"><![CDATA[<p>学习react相关的文档知识，有些过时的信息需要及时校正，比如这个setState的同步&amp;异步更新问题以前也是常见的面试题,在react18之后他的答案又变化了，能力的提升就是踩坑的频次。(⊙o⊙)…</p><h2 id="言归正传"><a href="#言归正传" class="headerlink" title="言归正传"></a>言归正传</h2><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>我们有如下代码，是一个常见的面试题</p><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span> <span class="token string">'abc'</span><span class="token punctuation">,</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">:</span> <span class="token string">'didmount'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// setTimeout中调用</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'setTimeout: pre----'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">:</span> <span class="token string">'setTimeout'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'setTimeout:==== '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'div2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>increment2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  increment <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 合成事件中调用</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'react increment==== '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">:</span> <span class="token string">'increment'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'react event: '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>  increment2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 原生事件中调用</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'dom event: ===='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">:</span> <span class="token string">'dom event'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'dom event: '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"App"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>couont<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"div1"</span> onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>increment<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>React<span class="token punctuation">.</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>increment1        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"div2"</span><span class="token operator">></span>click me and increment2<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>在React 18 之前，</p><blockquote><p>只在React 事件处理函数中进行批异步更新。<br>默认情况下，在promise、setTimeout、原生事件处理函数中、或任何其它事件内的更新都是同步的</p></blockquote><p>在React 18 之后</p><pre class=" language-js"><code class="language-js">   <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>   <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDom <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token punctuation">;</span>   <span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span><span class="token punctuation">;</span>   <span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> createRoot <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'react-dom/client'</span><span class="token punctuation">;</span>   <span class="token keyword">const</span> rootElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 异步测试 --react18 推荐语法</span>   <span class="token comment" spellcheck="true">//createRoot(rootElement).render(&lt;App />);</span>   <span class="token comment" spellcheck="true">// 同步测试 --react18 废弃语法</span>   ReactDom<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> rootElement<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>当你用 ReactDom.render 挂载节点的时候会运行得到的效果就是</p><blockquote><p>只在React 事件处理函数中进行批异步更新，其他的 promise、setTimeout、原生事件处理函数中的更新都是同步的<br>当你用 createRoot(rootElement).render(<App />); 挂载节点的时候，<br>所有的更新都是异步的。</p></blockquote><p>__本文作者__：番茄炒蛋<br />__本文地址__： <a href="https://www.56way.com/2023/09/07/react_setState/">https://www.56way.com/2023/09/07/react_setState&#x2F;</a> <br />__版权声明__：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      学习react相关的文档知识，有些过时的信息需要及时校正，比如这个setState的同步&amp;异步更新问题以前也是常见的面试题,在react18之后他的答案又变化了，能力的提升就是踩坑的频次。(⊙o⊙)…
    
    </summary>
    
    
      <category term="react, setState, 异步更新" scheme="https://www.56way.com/tags/react-setState-%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
</feed>
